@model IEnumerable<Room>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card shadow">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">List Room</h6>
        <form asp-action="Index" method="get">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Search" name="searchString" value="@ViewBag.SearchString">
                <button type="sumbit" class="btn btn-outline-primary">Search</button>
            </div>
        </form>
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    </div>

    <div class="card-body">
        <div class="table-responsive mt-2">
            <table class="table table-hover" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.RoomName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Floor)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RoomType)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomName)
                            </td>
                        @*    <td class="@(item.Status == false ? "text-danger" : "text-success")">
                                @(item.Status == false ? "false" : "true")
                            </td>*@
                            <td>
                                @Html.DisplayFor(modelItem => item.Floor.FloorName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoomType.RoomTypeName)
                            </td>
                            <td>
                                <a class="btn btn-outline-success" asp-action="Edit" asp-route-id="@item.RoomId">Edit</a> 
                                <a class="btn btn-outline-warning" asp-action="Details" asp-route-id="@item.RoomId">Details</a> 
                                <a class="btn btn-outline-danger" onclick="return confirm('Are you sure to detele');" asp-action="Delete" asp-route-id="@item.RoomId">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Pager-->
        @{
            Func<int?, string> generateUrl = (int? _pagenumber) =>
            {
                return Url.ActionLink("Index", null, new { page = _pagenumber });
            };
            var datapaging = new
            {
                currentPage = ViewBag.pageNumber,
                countPages = ViewBag.totalPages,
                generateUrl = generateUrl
            };
        }
        <partial name="_Paging" model="@datapaging" />

    </div>
</div>

